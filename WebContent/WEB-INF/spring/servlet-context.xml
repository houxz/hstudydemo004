<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/oxm
		http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd">
	
	<!-- root-context.xml 引用的扫描包不能扫描test1ctrl ， 这里加了就可以了 不知道原因  -->
	 <context:component-scan base-package="com.projectmanage" /> 
 
    <!-- 注册HandlerMapper、HandlerAdapter两个映射类 <mvc:annotation-driven />会注册两个映射类，负责将请求映射到类和方法中 -->
    <mvc:annotation-driven />
    <!-- 因为配置的spring是拦截所有请求，所以需要配置<mvc:default-servlet-handler />，来让静态资源通过（如js, css文件等） -->
    <mvc:default-servlet-handler />
    
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
    
    
    <!-- 视图解析器 , 视图解析器是将Controller类返回的视图名加上配置的前后缀进行展示-->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <beans:property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
        <beans:property name="prefix" value="/WEB-INF/views/"></beans:property>
        <beans:property name="suffix" value=".jsp"></beans:property>
    </beans:bean>
	
	<!--  表示那些页面不需要被监控 除此之外的页面都会被 org.auth.AuthMonitorInterceptor 捕获到并处理  -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*.web" />
			<mvc:exclude-mapping path="/login.web"/>
			<mvc:exclude-mapping path="/logout.web"/>
			<mvc:exclude-mapping path="/interface.web"/>
			<mvc:exclude-mapping path="/selfcheck.web"/>
			<mvc:exclude-mapping path="/head.web"/>
			<mvc:exclude-mapping path="/foot.web"/>
			<mvc:exclude-mapping path="/test1.web"/> 
			<beans:bean class="com.projectmanage.auth.AuthMonitorInterceptor"></beans:bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 在springMVC配置文件中实现路径的转发和资源的请求 -->
<!-- 	<beans:bean -->
<!-- 		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" /> -->
<!-- 	<view-controller path="/exception/resourceNotFound.web" /> -->
<!-- 	<view-controller path="/exception/uncaughtException.web" /> -->
<!-- 	<view-controller path="/exception/dataAccessFailure.web" /> -->
	<view-controller path="/exception/accessDenied.web" />

<!-- 国际化配置 -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="basenames">
			<beans:value>WEB-INF/messages/messages</beans:value>
		</beans:property>
	</beans:bean>

<!-- 	<beans:bean -->
<!-- 		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" -->
<!-- 		p:defaultErrorView="/exception/uncaughtException"> -->
<!-- 		<beans:property name="exceptionMappings"> -->
<!-- 			<beans:props> -->
<!-- 				<beans:prop key=".DataAccessException">/exception/dataAccessFailure.web -->
<!-- 				</beans:prop> -->
<!-- 				<beans:prop key=".AccessDeniedException">/exception/accessDenied.web</beans:prop> -->
<!-- 				<beans:prop key=".NoSuchRequestHandlingMethodException">/exception/resourceNotFound.web -->
<!-- 				</beans:prop> -->
<!-- 				<beans:prop key=".TypeMismatchException">/exception/resourceNotFound.web -->
<!-- 				</beans:prop> -->
<!-- 				<beans:prop key=".MissingServletRequestParameterException">/exception/resourceNotFound.web -->
<!-- 				</beans:prop> -->
<!-- 			</beans:props> -->
<!-- 		</beans:property> -->
<!--  	</beans:bean>  -->

</beans:beans>